{"version":3,"file":"static/js/207.3be6e5fe.chunk.js","mappings":"0LAAaA,EAAoB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAClC,OACE,iCACE,gBACEC,UAAS,UACPD,EAAc,kBAAoB,iBAD3B,sJADX,UAKE,gBACEC,UAAS,UACPD,EACI,oCACA,mCAHG,iOAUb,gBACEC,UAAS,UACPD,EAAc,gBAAkB,mBADzB,mJADX,UAKE,gBACEC,UAAS,UACPD,EACI,kCACA,mCAHG,kOAWlB,C,4IClCYE,EAAkB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,UAAWJ,EAAkB,EAAlBA,YACjD,OACE,mBACEK,KAAK,SACLC,SAAUF,EACVH,UAAS,UACPD,EACI,uHACA,iFAHG,kMAMO,kBANP,mCAHX,SAYGI,GACC,SAACG,EAAA,EAAD,CACEC,MAAK,UAAKR,EAAc,WAAa,YACrCS,KAAK,SAGP,8BAAGN,KAIV,E,4DClBYO,EAAc,SAAC,GAAqB,IAAnBV,EAAkB,EAAlBA,YACpBW,GAAiBC,EAAAA,EAAAA,KAAjBD,aACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAYzB,OACE,iCACE,mBACEhB,UAAS,sFAETiB,QAAQ,YAHV,UAKG,IALH,QAMQ,QAER,kBACEC,SAjByB,SAAAC,GAC7B,IAAMC,EAAQD,EAAME,OAAOD,MAE3BR,GAASU,EAAAA,EAAAA,IAAgBF,GAC1B,EAcKpB,UAAS,UACPD,EACI,+DACA,+DAHG,iQASTK,KAAK,QACLmB,KAAK,YACLC,GAAG,YACHC,YAAY,qBACZL,MAAON,EAAKY,OAAS,GACrBC,UAAQ,KAEV,mBACE3B,UAAS,sFAETiB,QAAQ,eAHV,UAKG,IALH,WAMW,QAEX,iBAAKjB,UAAU,OAAf,WACE,kBACEA,UAAS,UACPD,EACI,+DACA,+DAHG,mQASTK,KAAI,UAAMM,EAA4B,OAAb,YACzBa,KAAK,eACLC,GAAG,eACHC,YAAY,sBACZG,IAAK,EACLD,UAAQ,KAEV,mBACE3B,UAAS,UACPD,EACI,+DACA,+DAHG,qCAKTK,KAAK,SACLyB,QAvEyB,WAC/BjB,GAASkB,EAAAA,EAAAA,MACV,EA8DK,SASGpB,GAAe,SAAC,MAAD,KAAgB,SAAC,MAAD,WAKzC,E,6BClFc,SAASqB,IACtB,IAAMnB,GAAWC,EAAAA,EAAAA,MACXd,GAAcgB,EAAAA,EAAAA,IAAYiB,EAAAA,IAC1B7B,GAAYY,EAAAA,EAAAA,IAAYkB,EAAAA,IAExBC,EAAY,mCAAG,WAAMC,GAAN,6EACnBA,EAAIC,iBADe,EAEiBD,EAAId,OAAOgB,SAAvCC,EAFW,EAEXA,UAAWC,EAFA,EAEAA,aACbC,EAAW,CACfd,MAAOY,EAAUlB,MAAMqB,OACvBC,SAAUH,EAAanB,MAAMqB,QAE/B7B,GAAS+B,EAAAA,EAAAA,IAAMH,IACfA,EAASE,SAAW,GARD,2CAAH,sDAWlB,OACE,iCACE,SAACE,EAAA,EAAD,WACE,8CAEF,kBACEC,SAAUX,EACVY,aAAa,MACb9C,UAAS,UACPD,EACI,mFACA,uEAHG,0OAHX,WAWE,eAAIC,UAAU,qEAAd,oBAGA,SAACS,EAAD,CAAaV,YAAaA,KAC1B,UAAC,KAAD,CACEC,UAAS,WACPD,EAAc,iBAAmB,iBAD1B,qBAGTgD,GAAI,gBAJN,WAME,cACE/C,UAAS,UACPD,EAAc,oBAAsB,gBAD7B,KADX,8BANF,qBAeA,SAACE,EAAD,CACEC,KAAK,UACLC,UAAWA,EACXJ,YAAaA,QAGjB,SAACD,EAAA,EAAD,CAAmBC,YAAaA,MAGrC,C","sources":["components/Shine/RegistrationShine.jsx","pages/login/LoginFormButton.jsx","pages/login/LoginInputs.jsx","pages/login/Login.jsx"],"sourcesContent":["export const RegistrationShine = ({ isThemeDark }) => {\n  return (\n    <>\n      <div\n        className={`${\n          isThemeDark ? 'top-52 right-12' : 'top-32 left-12'\n        } w-full  max-w-[280px] pointer-events-none h-full max-h-96 bg-transparent bg-opacity-50  overflow-hidden rounded-lg blur-3xl absolute   md:hidden `}\n      >\n        <div\n          className={`${\n            isThemeDark\n              ? 'from-transparent   to-violet-800 '\n              : 'from-transparent   to-amber-300 '\n          } absolute bottom-0 w-full h-full  max-w-[580px] max-h-[480px] transform \n        -translate-x-1/2 pointer-events-none -translate-y-1/2 bg-gradient-to-b from-transparent\n          rounded-full animate-shine blur-3xl`}\n        ></div>\n      </div>\n\n      <div\n        className={`${\n          isThemeDark ? 'top-10 left-2' : 'top-52  right-12'\n        } w-full  max-w-[180px] pointer-events-none h-full max-h-96 bg-transparent bg-opacity-50  overflow-hidden rounded-lg blur-3xl absolute  md:-z-10`}\n      >\n        <div\n          className={`${\n            isThemeDark\n              ? 'from-transparent   to-cyan-700 '\n              : 'from-transparent   to-amber-500 '\n          } absolute bottom-0 w-full h-full  max-w-[580px] max-h-[480px] transform \n        -translate-x-1/2 -translate-y-1/2 bg-gradient-to-b from-transparent\n          rounded-full pointer-events-none animate-shine blur-3xl`}\n        ></div>\n      </div>\n    </>\n  );\n};\n","import { PulseLoader } from 'react-spinners';\n\nexport const LoginFormButton = ({ text, isLoading, isThemeDark }) => {\n  return (\n    <button\n      type=\"submit\"\n      disabled={isLoading}\n      className={`${\n        isThemeDark\n          ? 'shadow-none hover:bg-buttonHoverColorDark text-buttonTextColorDark hover:text-lightPartsColorDark bg-buttonColorDark'\n          : 'shadow-shadowBox hover:bg-buttonHoverColor text-buttonTextColor bg-buttonColor'\n      } text-center font-light w-40 h-11 rounded-sm border-none outline-none \n      mx-auto cursor-pointer shadow-md mt-28 mb-8 flex items-center justify-around transition-all duration-300 ${\n        isThemeDark ? 'text-lg md:w-48' : 'text-lg md:w-48'\n      } ssm:w-40 ssm:h-10 md2:text-sm `}\n    >\n      {isLoading ? (\n        <PulseLoader\n          color={`${isThemeDark ? '#3f78cc ' : '#F5DEB3 '}`}\n          size=\"6px\"\n        />\n      ) : (\n        <>{text}</>\n      )}\n    </button>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeUserEmail } from '../../redux/auth/slice-auth';\nimport { getUserData } from '../../redux/selectors';\nimport { useTheme } from '../../helpers/hooks/theme-hook';\nimport { PiEyeClosedBold } from 'react-icons/pi';\nimport { HiMiniEye } from 'react-icons/hi2';\nimport { setShowPass } from '../../redux/theme/themeReducer';\n\nexport const LoginInputs = ({ isThemeDark }) => {\n  const { showPassword } = useTheme();\n  const dispatch = useDispatch();\n  const user = useSelector(getUserData);\n\n  const togglePasswordVisibility = () => {\n    dispatch(setShowPass());\n  };\n\n  const handleInputEmailChange = event => {\n    const value = event.target.value;\n\n    dispatch(changeUserEmail(value));\n  };\n\n  return (\n    <>\n      <label\n        className={`mt-9 text-xl flex items-center gap-2 md:ml-2 \n      md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"userEmail\"\n      >\n        {' '}\n        Email{' '}\n      </label>\n      <input\n        onChange={handleInputEmailChange}\n        className={`${\n          isThemeDark\n            ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n            : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n        } mx-auto w-full py-1 px-5 rounded-sm h-12 \n          border-0 outline-none   \n           placeholder:font-base\n             md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n           ssm:text-base  font-light  transition-all  2xl2:text-2xl`}\n        type=\"email\"\n        name=\"userEmail\"\n        id=\"userEmail\"\n        placeholder=\"Balambino@mail.com\"\n        value={user.email || ''}\n        required\n      />\n      <label\n        className={`mt-2 text-xl flex items-center gap-2 md:ml-2 \n      md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"userPassword\"\n      >\n        {' '}\n        Password{' '}\n      </label>\n      <div className=\"flex\">\n        <input\n          className={`${\n            isThemeDark\n              ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n              : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n          } mx-auto  py-1 px-5 rounded-l-sm h-12 \n          border-0 outline-none   \n           placeholder:font-base\n            md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n           ssm:text-base w-full  font-light  transition-all  2xl2:text-2xl`}\n          type={`${!showPassword ? 'password' : 'text'}`}\n          name=\"userPassword\"\n          id=\"userPassword\"\n          placeholder=\"Enter your password\"\n          min={7}\n          required\n        />\n        <button\n          className={`${\n            isThemeDark\n              ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n              : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n          } rounded-r-sm w-12 transition-all`}\n          type=\"button\"\n          onClick={togglePasswordVisibility}\n        >\n          {showPassword ? <HiMiniEye /> : <PiEyeClosedBold />}\n        </button>\n      </div>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { LoginFormButton } from './LoginFormButton';\nimport { LoginInputs } from './LoginInputs';\nimport { RegistrationShine } from 'components/Shine/RegistrationShine';\nimport { login } from '../../redux/auth/operations-auth';\nimport { getisLoadingUser, getTheme } from '../../redux/selectors';\nimport { Helmet } from 'react-helmet';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const isThemeDark = useSelector(getTheme);\n  const isLoading = useSelector(getisLoadingUser);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const { userEmail, userPassword } = evt.target.elements;\n    const userData = {\n      email: userEmail.value.trim(),\n      password: userPassword.value.trim(),\n    };\n    dispatch(login(userData));\n    userData.password = '';\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Stone-Login</title>\n      </Helmet>\n      <form\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n        className={`${\n          isThemeDark\n            ? ' shadow-shadowBoxDark from-smallWraperGradient1Dark to-smallWraperGradient2Dark '\n            : ' from-smallWraperGradient1 shadow-shadowBox to-smallWraperGradient2 '\n        }  flex gap-2 flex-col md3:w-5/12 pb-9   pt-20  px-10 rounded-sm\n          shadow-lg bg-gradient-to-tr md2:mt-4  md2:pt-8  md:pb-14 md:px-5 md:min-h-0 md:w-[96%]\n          transition-all  ssm2:-mt-4 ssm2:pt-28  mx-auto z-20 mt-2 `}\n      >\n        <h1 className=\"text-center text-4xl m-0 md:text-2xl md2:text-2xl font-normal mt-2\">\n          Login\n        </h1>\n        <LoginInputs isThemeDark={isThemeDark} />\n        <Link\n          className={` ${\n            isThemeDark ? 'text-teal-400 ' : 'text-teal-600 '\n          } mt-10 flex gap-4`}\n          to={'/registration'}\n        >\n          <p\n            className={`${\n              isThemeDark ? 'text-darkFontDark' : 'text-darkFont'\n            } `}\n          >\n            Have no account?\n          </p>\n          Registrate now\n        </Link>\n        <LoginFormButton\n          text=\"Sign in\"\n          isLoading={isLoading}\n          isThemeDark={isThemeDark}\n        />\n      </form>\n      <RegistrationShine isThemeDark={isThemeDark} />\n    </>\n  );\n}\n"],"names":["RegistrationShine","isThemeDark","className","LoginFormButton","text","isLoading","type","disabled","PulseLoader","color","size","LoginInputs","showPassword","useTheme","dispatch","useDispatch","user","useSelector","getUserData","htmlFor","onChange","event","value","target","changeUserEmail","name","id","placeholder","email","required","min","onClick","setShowPass","Login","getTheme","getisLoadingUser","handleSubmit","evt","preventDefault","elements","userEmail","userPassword","userData","trim","password","login","Helmet","onSubmit","autoComplete","to"],"sourceRoot":""}